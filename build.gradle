plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'maven-publish'
    id 'signing'
}

group = 'io.github.0xivanov'
version = '1.0.1'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            version = '1.0.1'
            artifactId = 'opennodeapi'
            groupId = 'io.github.0xivanov'
            from components.java
            pom {
                name = "Opennode Api"
                description = 'Opennode Java Api'
                url = 'http://github.com/0xivanov/opennode-api/'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = '0xivanov'
                        name = 'Ivan Ivanov'
                        email = 'ivanivanov.ii726@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/0xivanov/opennode-api.git'
                    developerConnection = 'scm:git:ssh://github.com/0xivanov/opennode-api.git'
                    url = 'http://github.com/0xivanov/opennode-api/'
                }
            }
        }
    }

    repositories {
        maven {
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}
signing {
    sign publishing.publications.mavenJava
}
